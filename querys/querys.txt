-- Table: public.dictionary

-- DROP TABLE public.dictionary;

CREATE TABLE IF NOT EXISTS public.dictionary
(
    id_word integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    word character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT dictionary_pkey PRIMARY KEY (id_word)
)

TABLESPACE pg_default;

ALTER TABLE public.dictionary
    OWNER to postgres;



*****************************
-- Table: public.users

-- DROP TABLE public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id_user integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    username character varying(30) COLLATE pg_catalog."default" NOT NULL,
    password character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id_user)
)

TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;

**********************************************
-- Table: public.history

-- DROP TABLE public.history;

CREATE TABLE IF NOT EXISTS public.history
(
    id_history integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_userfk integer,
    id_wordfk integer,
    winner boolean,
    CONSTRAINT history_pkey PRIMARY KEY (id_history),
    CONSTRAINT history_id_userfk_fkey FOREIGN KEY (id_userfk)
        REFERENCES public.users (id_user) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT history_id_wordfk_fkey FOREIGN KEY (id_wordfk)
        REFERENCES public.dictionary (id_word) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.history
    OWNER to postgres;




/***************************** VISTAS ***********************************/
-- View: public.vsthistory

-- DROP VIEW public.vsthistory;

CREATE OR REPLACE VIEW public.vsthistory
 AS
 SELECT u.username,
    u.password,
    d.word,
    h.winner
   FROM history h
     JOIN users u ON h.id_userfk = u.id_user
     JOIN dictionary d ON h.id_wordfk = d.id_word;

ALTER TABLE public.vsthistory
    OWNER TO postgres;

****************************************************
-- View: public.vsttoptenplayers

-- DROP VIEW public.vsttoptenplayers;

CREATE OR REPLACE VIEW public.vsttoptenplayers
 AS
 SELECT vsthistory.username,
    count(*) AS winner
   FROM vsthistory
  WHERE vsthistory.winner = true
  GROUP BY vsthistory.username, vsthistory.password
  ORDER BY (count(*)) DESC
 LIMIT 10;

ALTER TABLE public.vsttoptenplayers
    OWNER TO postgres;


************************************* Insert Diccionario de Palabras *****************************
COPY dictionary (word)
FROM 'C:\Words\wordDictionary.txt';